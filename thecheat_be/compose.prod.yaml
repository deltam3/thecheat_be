services:
  web:
    build:
      context: .
      dockerfile: ./docker/production/nginx/Dockerfile
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage:ro
      - laravel-public-assets:/var/www/public/build:ro
    networks:
      - laravel-production
    ports:
      - "${NGINX_PORT:-80}:80"
      - "443:443"
    depends_on:
      php-fpm:
        condition: service_healthy

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - laravel-public-assets:/var/www/public/build
      - laravel-storage-production:/var/www/storage
    env_file:
      - .env.prod
    networks:
      - laravel-production
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    # container_name: mysql-master
    image: mysql:8
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - MYSQL_DATABASE=app
      - MYSQL_USER=laravel
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - mysql-data-first:/var/lib/mysql
    networks:
      - laravel-production
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --server-id=1 --log-bin=mysql-bin --binlog-format=row

  mysql_second:
    # container_name: mysql-slave
    image: mysql:8
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=mysql_second
      - MYSQL_USER=laravel
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - mysql-data-second:/var/lib/mysql
    networks:
      - laravel-production
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql_second"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --server-id=2 --log-bin=mysql-bin --binlog-format=row
    depends_on:
      - mysql

  redis:
    image: redis:alpine
    networks:
      - laravel-production
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  laravel-production:

volumes:
  mysql-data-first:
  mysql-data-second:
  laravel-storage-production:
  laravel-public-assets:
  redis-master-data:
